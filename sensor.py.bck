import esphome.codegen as cg
import esphome.config_validation as cv
from esphome.components import sensor, uart
from esphome.const import (
    UNIT_CENTIMETER,
    ICON_RULER,
    STATE_CLASS_MEASUREMENT,
    DEVICE_CLASS_DISTANCE,
    ENTITY_CATEGORY_NONE
)

kaidi_ns = cg.esphome_ns.namespace("kaidi")
KaidiSensor = kaidi_ns.class_("KaidiSensor", sensor.Sensor, cg.PollingComponent)

CONFIG_SCHEMA = (
    sensor.sensor_schema(
        KaidiSensor,
        unit_of_measurement=UNIT_CENTIMETER,
        icon=ICON_RULER,
        accuracy_decimals=0,
        device_class=DEVICE_CLASS_DISTANCE,
        state_class=STATE_CLASS_MEASUREMENT,
        entity_category=ENTITY_CATEGORY_NONE,
    )
    .extend(uart.UART_DEVICE_SCHEMA)
)


async def to_code(config):
    var = await sensor.new_sensor(config)
    await cg.register_component(var, config)
    await uart.register_uart_device(var, config)
